<div class="container ml-0 mr-0 mw-100">
  <div class="row">

    <div class="col-5 p-0 ">
      <div class="d-flex align-items-center justify-content-center" style="height: calc(100vh - 56px)">
        

<div class="container">
<h2> Interview Questions</h2>
It's your turn to interview! If you want, you can choose from the following questions.
  <div class = "interview_card">
    <div class="question"> 
      <h5> Write a function that sorts the keys in a hash by the length of the key as a string.  </h5>
      For instance, the hash:
      <pre><code> { abc: 'hello', 'another_key' => 123, 4567 => 'third' } </code></pre>
      should result in:
      <pre><code> ["abc", "4567", "another_key"]</code></pre>
    </div>
    <button type="button" class="btn btn-primary" data-toggle="collapse" data-target="#case1">Show Answer</button>
    <div id="case1" class="collapse in">
      There are in fact multiple ways to accomplish this:
      <pre><code>  hsh.keys.map(&:to_s).sort_by(&:length)</code></pre>
      or:
      <pre><code> hsh.keys.collect(&:to_s).sort_by { |key| key.length }</code></pre>
    </div>
  </div>
</div>
       </div>
    </div>

    <div class="col-7 p-0">
      <div class="d-flex align-items-center justify-content-center bg-dark" style="height: calc(100vh - 56px - 250px);">

      <!-- Video chat -->
      <div id="twilio-token" data-twilio-token="<%= JSON.generate(@token) %>"></div>
      <div id="remote-video" class="video-styling waiting">
        <h1>Waiting for <%= @other_user.nickname %> to join...</h1>
        <div>
          <a href="#" class="video-call-button">Call</a>
        </div>
        <div><a href="#" class="round-hang-up video-button">Disconnect</a></div>
        <div id="local-video" class="waiting">
          <div></div>
        </div>
      </div>

      </div>

      <div class="d-flex flex-column justify-content-center bg-white p-3" style="height: calc(250px)">

        <!-- Chat messages: -->
        <div id="messages" data-interview-id="<%= @interview.id %>" style="overflow-y: auto">
          <% @interview.messages.each do |message| %>
            <%= render 'messages/message', message: message %>
          <% end %>
        </div>

        <!-- Chat input: -->
        <%= simple_form_for [ @interview, @message ], remote: true do |f| %>
          <div class="d-flex chat-input mt-2" style="height: 60px;">
            <%= f.input_field :content, label: false, placeholder: "Send a message to your companion ...", class: "flex-grow-1 chat-message rounded p-2" %>
            <button name="button" type="submit" class="chat-button">
              <i class="fas fa-paper-plane"></i>
            </button>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>
